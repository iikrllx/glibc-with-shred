# libmachuser.map - symbol version and export information for libmachuser.so
GLIBC_2.0 {
  global:

    # These functions are used internally by libc.
    _S_exc_server; __host_adjust_time; __host_get_time; __host_info;
    __host_set_time; __mach_port_allocate_name_rpc;
    __mach_port_allocate_rpc; __mach_port_deallocate_rpc;
    __mach_port_destroy; __mach_port_extract_right;
    __mach_port_get_refs; __mach_port_insert_right_rpc;
    __mach_port_mod_refs; __mach_port_move_member; __mach_port_names;
    __mach_port_set_qlimit; __task_create_rpc;
    __task_disable_pc_sampling; __task_enable_pc_sampling;
    __task_get_special_port; __task_priority; __task_resume;
    __task_set_special_port_rpc; __task_suspend_rpc;
    __task_terminate_rpc; __task_threads; __thread_abort;
    __thread_create; __thread_depress_abort_rpc; __thread_get_state;
    __thread_resume; __thread_set_special_port; __thread_set_state;
    __thread_suspend; __thread_terminate; __vm_allocate_rpc;
    __vm_deallocate_rpc; __vm_map_rpc; __vm_protect; __vm_read;
    __vm_region; __vm_statistics; __vm_write;

    # functions in normal name space
    # Please keep them sorted by name!

    # d*
    default_pager_info; default_pager_object_create;
    default_pager_object_pages; default_pager_objects;
    default_pager_paging_file; default_pager_register_fileserver;
    device_close; device_get_status; device_map; device_open;
    device_open_request; device_read; device_read_inband;
    device_read_request; device_read_request_inband; device_set_filter;
    device_set_status; device_write; device_write_inband;
    device_write_request; device_write_request_inband;
    dp_helper_paging_space;

    # e*
    exception_raise;

    # h*
    host_adjust_time; host_get_boot_info; host_get_time; host_info;
    host_kernel_version; host_processor_set_priv; host_processor_sets;
    host_processors; host_reboot; host_set_time;

    # m*
    mach_port_allocate_name_rpc; mach_port_allocate_rpc;
    mach_port_deallocate_rpc; mach_port_destroy;
    mach_port_extract_right; mach_port_get_receive_status;
    mach_port_get_refs; mach_port_get_set_status;
    mach_port_insert_right_rpc; mach_port_mod_refs;
    mach_port_move_member; mach_port_names; mach_port_rename;
    mach_port_request_notification; mach_port_set_mscount;
    mach_port_set_qlimit; mach_port_set_seqno; mach_port_type;
    mach_ports_lookup; mach_ports_register;
    memory_object_change_attributes; memory_object_change_completed;
    memory_object_copy; memory_object_create;
    memory_object_data_error; memory_object_data_initialize;
    memory_object_data_provided; memory_object_data_request;
    memory_object_data_return; memory_object_data_supply;
    memory_object_data_unavailable; memory_object_data_unlock;
    memory_object_data_write; memory_object_destroy;
    memory_object_get_attributes; memory_object_init;
    memory_object_lock_completed; memory_object_lock_request;
    memory_object_ready; memory_object_set_attributes;
    memory_object_supply_completed; memory_object_terminate;

    # o*
    old_mach_port_get_receive_status;

    # p*
    processor_assign; processor_control; processor_exit;
    processor_get_assignment; processor_info; processor_set_create;
    processor_set_default; processor_set_destroy; processor_set_info;
    processor_set_max_priority; processor_set_policy_disable;
    processor_set_policy_enable; processor_set_tasks;
    processor_set_threads; processor_start;

    # t*
    task_assign; task_assign_default; task_create_rpc;
    task_disable_pc_sampling; task_enable_pc_sampling;
    task_get_assignment; task_get_emulation_vector;
    task_get_sampled_pcs; task_get_special_port; task_info;
    task_priority; task_ras_control; task_resume; task_set_emulation;
    task_set_emulation_vector; task_set_special_port_rpc;
    task_suspend_rpc; task_terminate_rpc; task_threads; thread_abort;
    thread_assign; thread_assign_default; thread_create;
    thread_depress_abort_rpc; thread_disable_pc_sampling;
    thread_enable_pc_sampling; thread_get_assignment;
    thread_get_sampled_pcs; thread_get_special_port; thread_get_state;
    thread_info; thread_max_priority; thread_policy; thread_priority;
    thread_resume; thread_set_special_port; thread_set_state;
    thread_suspend; thread_terminate; thread_wire;

    # v*
    vm_allocate_rpc; vm_copy; vm_deallocate_rpc; vm_inherit;
    vm_machine_attribute; vm_map_rpc; vm_protect; vm_read; vm_region;
    vm_set_default_memory_manager; vm_statistics; vm_wire; vm_write;

    # x*
    xxx_cpu_control; xxx_device_get_status; xxx_device_set_filter;
    xxx_device_set_status; xxx_host_info;
    xxx_memory_object_lock_request; xxx_processor_set_default_priv;
    xxx_slot_info; xxx_task_get_emulation_vector; xxx_task_info;
    xxx_task_set_emulation_vector; xxx_thread_get_state;
    xxx_thread_info; xxx_thread_set_state;

    # y*
    yyy_host_info; yyy_processor_control; yyy_processor_info;
    yyy_processor_set_info;

  local:
    *;
};
