	    List of known bugs (certainly very incomplete)
	    ----------------------------------------------

Time-stamp: <1997-03-22T04:31:41+0100 drepper>

This following list contains those bugs which I'm aware of.  Please
make sure that bugs you report are not listed here.  If you can fix one
of these bugs/limitations I'll certainly be glad to receive a patch.

Another source of information about bugs is the problem data base of the
GNU project.  There is an easy to use WWW interface is available at

	http://pogo.gnu.ai.mit.edu:8080/cgi-bin/wwwgnats.pl

I would appreciate it very much if you could verify the problem was not
reported before by looking though the database.  To make the information
in this data as useful as possible please report bugs always using the
`glibcbug' shell script which gets installed with GNU libc.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Severity: [  *] to [***]


[ **]  For GNU libc on Linux, there is still no solution for the UTMP
       problem.
       [Among others: PR libc/39]

[ **]  There are problems with signal handling when using LinuxThreads.

[ **]  The `cbrtl' function is inaccurate.  The algorithm used for `double'
       and `float' is not usable for `long double'.

[ **]  Not really a bug, but it could lead to such:
       The RPC code is ugly ugly ugly.  It's more or less verbatim taken
       from Sun's code and therefore mostly lacks complete prototypes and
       (more important) the use of `const'.  It *definitely* needs to be
       cleaned.

[  *]  The precision of the `sinhl' and/or `asinhl' function do not seem
       to be the best.

[  *]  The syslog function should print to the console if the LOG_CONS
       flag was given.
       [PR libc/72]

[  *]  On Linux, the <linux/posix_types.h> is not clean enough to satisfy
       the C++ namespace rules.  Declaring `struct fd_set' also makes
       `fd_set' available in the global namespace which conflicts with
       the definition of `fd_set' in glibc.
       [PR libc/79]

[  *]  On Linux, there should be a way to prevent defining the symbol
       NGROUPS_MAX in the <linux/limits.h> header file.  In glibc it
       is defined in <posix1_lim.h> which must not make the other
       symbols in <linux/limits.h> available.
       [PR libc/140]

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Ulrich Drepper
drepper@cygnus.com
