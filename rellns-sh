#! /bin/sh
# rellns-sh - Simplified ln program to generate relative symbolic link.
# Copyright (C) 1996, 1997 Free Software Foundation, Inc.
# Written by Ulrich Drepper <drepper@cygnus.com>, October 1996
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

if test $# -ne 2; then
  echo "Usage: rellns SOURCE DEST" >&2
  exit 1
fi

# A problem with this script is that we must be able to handle symbolic
# links somewhere in the paths of either path.  To resolve symlinks we use
# the `pwd' program.  But some `pwd' programs are no real programs but
# instead aliases (defined by the user) or builtins (as in bash-2).  Both
# kinds have in common that they might not give the correct result.  E.g.,
# the builtin in bash-2 returns the path which was used to change to the
# directory and not the real path.
#
# To prevent this problem we make sure the real `pwd' somewhere in the
# path is used.  Currently there is only support for bash-2 available.
# If other shells also have problems we have to add more code here.

if test "$BASH_VERSINFO" = "2"; then
  unalias pwd
  unset pwd
  enable -n pwd
fi

# Make both paths absolute.
if test -d $1; then
  to=`cd $1 && pwd`
else
  temp=`echo $1 | sed 's%/*[^/]*$%%'`
  to=`cd $temp && pwd`
  to="$to/`echo $1 | sed 's%.*/\([^/][^/]*\)$%\1%'`"
fi
to=`echo $to | sed 's%^/%%'`

if test -d $2; then
  from=`echo $2 | sed 's%/*$%%'`
else
  from=`echo $2 | sed 's%/*[^/]*$%%'`
fi

if test -z "$from"; then
  from=`pwd`;
fi
from=`cd $from && pwd | sed 's%^/%%'`

while test -n "$to" && test -n "$from"; do
  preto=`echo $to | sed 's%^\([^/]*\)/.*%\1%'`
  prefrom=`echo $from | sed 's%^\([^/]*\)/.*%\1%'`

  test "$preto" != "$prefrom" && break

  to=`echo $to | sed 's%^[^/]*/*\(.*\)$%\1%'`
  from=`echo $from | sed 's%^[^/]*/*\(.*\)$%\1%'`
done

while test -n "$from"; do
  rfrom="../$rfrom"
  from=`echo $from | sed 's%^[^/]*/*%%'`
done

ln -s $rfrom$to $2
